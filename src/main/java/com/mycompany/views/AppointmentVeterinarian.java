/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.views;

import com.mycompany.interfaces.DAOCitas;
import com.mycompany.interfaces.DAOCliente;
import com.mycompany.interfaces.DAOMascota;
import com.mycompany.models.Citas;
import com.mycompany.models.Cliente;
import com.mycompany.models.DAOCitasImplements;
import com.mycompany.models.DAOClienteImplements;
import com.mycompany.models.DAOMascotaImplements;
import com.mycompany.models.Mascota;
import com.mycompany.utils.Utils;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 52951
 */
public class AppointmentVeterinarian extends javax.swing.JPanel {

    /**
     * Creates new form PrincipalVeterinarian
     */
    public AppointmentVeterinarian() {
        initComponents();
     cargar();
    }

    
    public void cargar(){
    DAOCitas dao = new DAOCitasImplements();
    DAOMascota daomas = new DAOMascotaImplements();
    DAOCliente daocli = new DAOClienteImplements();
            DefaultTableModel model = (DefaultTableModel) tblTable.getModel();
            model.setRowCount(0);
        try {
            dao.listar().forEach((u) -> {
                try {
                    model.addRow(new Object[]{u.getId_cita(),daomas.regresarMascota(u.getId_mascota()).getNombre(),daocli.listar(u.getId_usuario()).get(0).getNombre(),
                    u.getFecha(),u.getHora(),u.getEstado()});
                } catch (Exception ex) {
                    Logger.getLogger(AppointmentAdmin.class.getName()).log(Level.SEVERE, null, ex);
                }
            });
        } catch (Exception ex) {
            Logger.getLogger(OwnerAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnRecipe = new javax.swing.JButton();
        pgnPagination = new com.mycompany.utils.pagination.Pagination();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        btnEstado = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(810, 560));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnRecipe.setText("Realizar Receta");
        btnRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecipeActionPerformed(evt);
            }
        });

        pgnPagination.setOpaque(false);

        jLabel1.setText("Citas");

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id_cita", "Mascota", "Usuario", "Fecha", "Hora", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTable);

        btnEstado.setText("Cambiar Estado");
        btnEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pgnPagination, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnRecipe, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEstado))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pgnPagination, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnRecipe)
                        .addComponent(btnEstado)))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecipeActionPerformed
        // TODO add your handling code here:
        
        DAOCitas dao = new DAOCitasImplements (); 
        if (tblTable.getSelectedRow() > -1) {
            try {
            List <Citas> list = dao.listar();
            
            DAOMascota daomas = new DAOMascotaImplements();
            Citas cita = list.get(tblTable.getSelectedRow());
            Mascota mas = daomas.regresarMascota(cita.getId_mascota());
            DAOCliente daocli = new DAOClienteImplements();
            Cliente clin = daocli.listar(cita.getId_usuario()).get(0);
            
           
            
            new FormRecipe(mas, clin).setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(PetsAdmin.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Debes seleccionar una cita.\n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRecipeActionPerformed

    private void btnEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoActionPerformed
        // TODO add your handling code here:
        DAOCitas dao = new DAOCitasImplements (); 
        
        try {
            List <Citas> list = dao.listar();
            if(list.isEmpty())
                return;
            Citas cita = list.get(tblTable.getSelectedRow());
            cita.setEstado("Realizado");
            dao.modificar(cita);
        } catch (Exception ex) {
            Logger.getLogger(PetsAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEstadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEstado;
    private javax.swing.JButton btnRecipe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.mycompany.utils.pagination.Pagination pgnPagination;
    private javax.swing.JTable tblTable;
    // End of variables declaration//GEN-END:variables
}
